/* Final Merged output.css - Combination of Ivan's and User's Versions */

/* == Base Styling == */
/* Ensures consistent font, spacing, and basic resets */
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif);
  }
  body {
    line-height: inherit;
    background-color: var(--color-gray-100);
  }
}

/* == Utilities == */
/* Common spacing, sizing, and alignment classes */
@layer utilities {
  .hidden { display: none; }
  .flex { display: flex; }
  .grid { display: grid; }
  .block { display: block; }
  .inline-block { display: inline-block; }
  .mx-auto { margin-inline: auto; }
  .text-center { text-align: center; }
  .text-left { text-align: left; }
  .rounded-lg { border-radius: var(--radius-lg); }
  .rounded-2xl { border-radius: var(--radius-2xl); }
  .border { border: 1px solid var(--color-gray-300); }
  .shadow-md { box-shadow: var(--shadow-md); }
  .shadow-lg { box-shadow: var(--shadow-lg); }
}

/* == Components == */
/* Styling for specific UI components */
@layer components {
  nav {
    background-color: var(--color-blue-600);
    padding: calc(var(--spacing) * 4);
  }
  nav h1 {
    color: var(--color-white);
    font-size: var(--text-2xl);
    font-weight: var(--font-weight-bold);
  }
  nav ul li a {
    color: var(--color-white);
    text-decoration: none;
  }
  nav ul li a:hover {
    text-decoration: underline;
  }

  header {
    text-align: center;
    padding: calc(var(--spacing) * 10);
    color: var(--color-gray-800);
    font-size: var(--text-3xl);
    font-weight: var(--font-weight-bold);
  }

  button {
    cursor: pointer;
    background-color: var(--color-blue-500);
    color: var(--color-white);
    border-radius: var(--radius-lg);
    padding: calc(var(--spacing) * 2) calc(var(--spacing) * 4);
  }
  button:hover {
    background-color: var(--color-blue-600);
  }

  .artworks-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: calc(var(--spacing) * 4);
  }
  .artwork-card {
    background-color: var(--color-white);
    border-radius: var(--radius-lg);
    overflow: hidden;
    box-shadow: var(--shadow-md);
    transition: transform 0.2s ease;
  }
  .artwork-card:hover {
    transform: scale(1.05);
    box-shadow: var(--shadow-lg);
  }
  .artwork-card img {
    width: 100%;
    height: 300px;
    object-fit: cover;
  }
  .artwork-card .content {
    padding: calc(var(--spacing) * 4);
  }
}

/* == Media Queries == */
/* Responsive behavior for different screen sizes */
@media (min-width: 640px) {
  .grid-cols-2 { grid-template-columns: repeat(2, 1fr); }
}
@media (min-width: 768px) {
  .grid-cols-3 { grid-template-columns: repeat(3, 1fr); }
}
@media (min-width: 1024px) {
  .grid-cols-4 { grid-template-columns: repeat(4, 1fr); }
}

/* == Animations == */
@keyframes spin {
  to { transform: rotate(360deg); }
}
.animate-spin {
  animation: spin 1s linear infinite;
}
